{"ast":null,"code":"import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n};","map":{"version":3,"sources":["C:/Users/Filip/react-frontend-02-prj-structure-routing/src/shared/hooks/form-hook.js"],"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","formState","dispatch","title","description","address"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,UAApB,QAAqC,OAArC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAClC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC9BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACD,SAFD,MAEO;AACLH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACD;AACF;;AACD,aAAO,EACL,GAAGN,KADE;AAELK,QAAAA,MAAM,EAAE,EACN,GAAGL,KAAK,CAACK,MADH;AAEN,WAACJ,MAAM,CAACG,OAAR,GAAkB;AAAEG,YAAAA,KAAK,EAAEN,MAAM,CAACM,KAAhB;AAAuBD,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAAvC;AAFZ,SAFH;AAMLA,QAAAA,OAAO,EAAEH;AANJ,OAAP;;AAQF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBH;;AAwBA,OAAO,MAAMQ,OAAO,GAAC,MAAI;AAEjB,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBZ,UAAU,CAACC,WAAD,EAAc;AACpDM,IAAAA,MAAM,EAAE;AACNM,MAAAA,KAAK,EAAE;AACLJ,QAAAA,KAAK,EAAE,EADF;AAELD,QAAAA,OAAO,EAAE;AAFJ,OADD;AAKNM,MAAAA,WAAW,EAAE;AACXL,QAAAA,KAAK,EAAE,EADI;AAEXD,QAAAA,OAAO,EAAE;AAFE,OALP;AASNO,MAAAA,OAAO,EAAC;AACNN,QAAAA,KAAK,EAAE,EADD;AAEND,QAAAA,OAAO,EAAE;AAFH;AATF,KAD4C;AAepDA,IAAAA,OAAO,EAAE;AAf2C,GAAd,CAAxC;AAiBP,CAnBM","sourcesContent":["import {useCallback,useReducer} from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if (inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid;\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n          }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const useForm=()=>{\r\n    \r\n        const [formState, dispatch] = useReducer(formReducer, {\r\n          inputs: {\r\n            title: {\r\n              value: '',\r\n              isValid: false\r\n            },\r\n            description: {\r\n              value: '',\r\n              isValid: false\r\n            },\r\n            address:{\r\n              value: '',\r\n              isValid: false\r\n            }\r\n          },\r\n          isValid: false\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}