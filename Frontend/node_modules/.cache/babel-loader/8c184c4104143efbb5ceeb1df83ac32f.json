{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\src\\\\places\\\\pages\\\\UpdatePlace.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  c;\n  const placeId = useParams().placeId;\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  useEffect(() => {\n    if (identifiedPlace) {\n      setFormData({\n        title: {\n          value: identifiedPlace.title,\n          isValid: true\n        },\n        description: {\n          value: identifiedPlace.description,\n          isValid: true\n        }\n      }, true);\n    }\n\n    setIsLoading(false);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Could not find place!\")));\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (min. 5 characters).\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["C:/Users/Filip/react-frontend-02-prj-structure-routing/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useState","useParams","Input","Button","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","UpdatePlace","c","placeId","formState","inputHandler","setFormData","title","value","isValid","description","identifiedPlace","DUMMY_PLACES","find","p","id","setIsLoading","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport {useHttpClient} from '../../shared/hooks/http-hook';\r\nimport './PlaceForm.css';\r\n\r\n\r\n\r\nconst UpdatePlace = () => {\r\n\r\n  c\r\n  const placeId = useParams().placeId;\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\r\n\r\n  useEffect(() => {\r\n    if (identifiedPlace) {\r\n      setFormData(\r\n        {\r\n          title: {\r\n            value: identifiedPlace.title,\r\n            isValid: true\r\n          },\r\n          description: {\r\n            value: identifiedPlace.description,\r\n            isValid: true\r\n          }\r\n        },\r\n        true\r\n      );\r\n    }\r\n    setIsLoading(false);\r\n  }, [setFormData, identifiedPlace]);\r\n\r\n  const placeUpdateSubmitHandler = event => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n  };\r\n\r\n  if (!identifiedPlace) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <h2>Loading...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n        initialValue={formState.inputs.title.value}\r\n        initialValid={formState.inputs.title.isValid}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (min. 5 characters).\"\r\n        onInput={inputHandler}\r\n        initialValue={formState.inputs.description.value}\r\n        initialValid={formState.inputs.description.isValid}\r\n      />\r\n      <Button type=\"submit\" disabled={!formState.isValid}>\r\n        UPDATE PLACE\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"]},"metadata":{},"sourceType":"module"}