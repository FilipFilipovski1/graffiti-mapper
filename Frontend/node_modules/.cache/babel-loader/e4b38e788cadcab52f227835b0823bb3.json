{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\src\\\\places\\\\pages\\\\NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport './NewPlace.css';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        input: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters)\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Add Place\"));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["C:/Users/Filip/react-frontend-02-prj-structure-routing/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","input","value","NewPlace","formState","dispatch","title","description","inputHandler","id","placeSubmitHandler","event","preventDefault"],"mappings":"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","sourcesContent":["import React,{useCallback,useReducer} from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE,VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport './NewPlace.css';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst formReducer=(state,action)=>{\n  switch(action.type){\n    case 'INPUT_CHANGE':\n      let formIsValid=true;\n      for(const inputId in state.inputs){\n        if(inputId===action.inputId){\n          formIsValid=formIsValid && action.isValid;\n        }\n        else{\n          formIsValid=formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        input:{\n          ...state.inputs,\n          [action.inputId] : {value:action.value,isValid:action.isValid}\n        },\n        isValid:formIsValid\n      };\n    default:\n      return state;\n\n  }\n};\n\nconst NewPlace = () => {\n  const [formState,dispatch]=useReducer(formReducer,{\n    inputs:{\n      title:{\n        value:'',\n        isValid:false\n      },\n      description:{\n        value:'',\n        isValid:false\n      },\n\n    },\n    isValid:false\n  });\n\n  const inputHandler=useCallback((id,value,isValid)=>{\n    dispatch({\n      type:'INPUT_CHANGE',\n      value:value,\n      isValid:isValid,\n      inputId:id\n    });\n  },[]);\n\n\n  const placeSubmitHandler=event=>{\n    event.preventDefault();\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n      id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n      id=\"description\"\n        element=\"textarea\"\n        \n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters)\"\n        onInput={inputHandler}\n      />\n\n      <Button type=\"submit\" disabled={!formState.isValid}>Add Place</Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}