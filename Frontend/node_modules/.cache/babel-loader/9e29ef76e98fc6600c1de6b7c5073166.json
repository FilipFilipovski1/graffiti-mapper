{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useReducer,useEffect}from'react';import{validate}from'../../util/validators';import'./Input.css';var inputReducer=function inputReducer(state,action){switch(action.type){case'CHANGE':return _objectSpread(_objectSpread({},state),{},{value:action.val,isValid:validate(action.val,action.validators)});case'TOUCH':{return _objectSpread(_objectSpread({},state),{},{isTouched:true});}default:return state;}};var Input=function Input(props){var _useReducer=useReducer(inputReducer,{value:props.initialValue||'',isTouched:false,isValid:props.initialValid||false}),_useReducer2=_slicedToArray(_useReducer,2),inputState=_useReducer2[0],dispatch=_useReducer2[1];var id=props.id,onInput=props.onInput;var value=inputState.value,isValid=inputState.isValid;useEffect(function(){onInput(id,value,isValid);},[id,value,isValid,onInput]);var changeHandler=function changeHandler(event){dispatch({type:'CHANGE',val:event.target.value,validators:props.validators});};var touchHandler=function touchHandler(){dispatch({type:'TOUCH'});};var element=props.element==='input'?/*#__PURE__*/React.createElement(\"input\",{id:props.id,type:props.type,placeholder:props.placeholder,onChange:changeHandler,onBlur:touchHandler,value:inputState.value}):/*#__PURE__*/React.createElement(\"textarea\",{id:props.id,rows:props.rows||3,onChange:changeHandler,onBlur:touchHandler,value:inputState.value});return/*#__PURE__*/React.createElement(\"div\",{className:\"form-control \".concat(!inputState.isValid&&inputState.isTouched&&'form-control--invalid')},/*#__PURE__*/React.createElement(\"label\",{htmlFor:props.id},props.label),element,!inputState.isValid&&inputState.isTouched&&/*#__PURE__*/React.createElement(\"p\",null,props.errorText));};export default Input;","map":{"version":3,"sources":["C:/Users/Filip/react-frontend-02-prj-structure-routing/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"mappings":"yWAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CAEA,OAASC,QAAT,KAAyB,uBAAzB,CACA,MAAO,aAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACtC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,QAAL,CACE,sCACKF,KADL,MAEEG,KAAK,CAAEF,MAAM,CAACG,GAFhB,CAGEC,OAAO,CAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,CAAaH,MAAM,CAACK,UAApB,CAHnB,GAKF,IAAK,OAAL,CAAc,CACZ,sCACKN,KADL,MAEEO,SAAS,CAAE,IAFb,GAID,CACD,QACE,MAAOP,CAAAA,KAAP,CAdJ,CAgBD,CAjBD,CAmBA,GAAMQ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,CAAI,iBACUb,UAAU,CAACG,YAAD,CAAe,CACtDI,KAAK,CAAEM,KAAK,CAACC,YAAN,EAAsB,EADyB,CAEtDH,SAAS,CAAE,KAF2C,CAGtDF,OAAO,CAAEI,KAAK,CAACE,YAAN,EAAsB,KAHuB,CAAf,CADpB,4CACdC,UADc,iBACFC,QADE,oBAObC,CAAAA,EAPa,CAOGL,KAPH,CAObK,EAPa,CAOTC,OAPS,CAOGN,KAPH,CAOTM,OAPS,IAQbZ,CAAAA,KARa,CAQMS,UARN,CAQbT,KARa,CAQNE,OARM,CAQMO,UARN,CAQNP,OARM,CAUrBR,SAAS,CAAC,UAAM,CACdkB,OAAO,CAACD,EAAD,CAAKX,KAAL,CAAYE,OAAZ,CAAP,CACD,CAFQ,CAEN,CAACS,EAAD,CAAKX,KAAL,CAAYE,OAAZ,CAAqBU,OAArB,CAFM,CAAT,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7BJ,QAAQ,CAAC,CACPX,IAAI,CAAE,QADC,CAEPE,GAAG,CAAEa,KAAK,CAACC,MAAN,CAAaf,KAFX,CAGPG,UAAU,CAAEG,KAAK,CAACH,UAHX,CAAD,CAAR,CAKD,CAND,CAQA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBN,QAAQ,CAAC,CACPX,IAAI,CAAE,OADC,CAAD,CAAR,CAGD,CAJD,CAMA,GAAMkB,CAAAA,OAAO,CACXX,KAAK,CAACW,OAAN,GAAkB,OAAlB,cACE,6BACE,EAAE,CAAEX,KAAK,CAACK,EADZ,CAEE,IAAI,CAAEL,KAAK,CAACP,IAFd,CAGE,WAAW,CAAEO,KAAK,CAACY,WAHrB,CAIE,QAAQ,CAAEL,aAJZ,CAKE,MAAM,CAAEG,YALV,CAME,KAAK,CAAEP,UAAU,CAACT,KANpB,EADF,cAUE,gCACE,EAAE,CAAEM,KAAK,CAACK,EADZ,CAEE,IAAI,CAAEL,KAAK,CAACa,IAAN,EAAc,CAFtB,CAGE,QAAQ,CAAEN,aAHZ,CAIE,MAAM,CAAEG,YAJV,CAKE,KAAK,CAAEP,UAAU,CAACT,KALpB,EAXJ,CAoBA,mBACE,2BACE,SAAS,wBAAkB,CAACS,UAAU,CAACP,OAAZ,EAAuBO,UAAU,CAACL,SAAlC,EACzB,uBADO,CADX,eAIE,6BAAO,OAAO,CAAEE,KAAK,CAACK,EAAtB,EAA2BL,KAAK,CAACc,KAAjC,CAJF,CAKGH,OALH,CAMG,CAACR,UAAU,CAACP,OAAZ,EAAuBO,UAAU,CAACL,SAAlC,eAA+C,6BAAIE,KAAK,CAACe,SAAV,CANlD,CADF,CAUD,CA1DD,CA4DA,cAAehB,CAAAA,KAAf","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}