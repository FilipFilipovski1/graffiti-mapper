{"ast":null,"code":"// import React, { useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/FormElements/Button';\n// import ErrorModal from '../../shared/components/UIElements/ErrorModal';\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n// import ImageUpload from '../../shared/components/FormElements/ImageUpload';\n// import {\n//   VALIDATOR_REQUIRE,\n//   VALIDATOR_MINLENGTH\n// } from '../../shared/util/validators';\n// import { useForm } from '../../shared/hooks/form-hook';\n// import { useHttpClient } from '../../shared/hooks/http-hook';\n// import { AuthContext } from '../../shared/context/auth-context';\n// import './PlaceForm.css';\n// const NewPlace = () => {\n//   const auth = useContext(AuthContext);\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n//   const [formState, inputHandler] = useForm(\n//     {\n//       title: {\n//         value: '',\n//         isValid: false\n//       },\n//       description: {\n//         value: '',\n//         isValid: false\n//       },\n//       address: {\n//         value: '',\n//         isValid: false\n//       },\n//       image: {\n//         value: null,\n//         isValid: false\n//       }\n//     },\n//     false\n//   );\n//   const history = useHistory();\n//   const placeSubmitHandler = async event => {\n//     event.preventDefault();\n//     try {\n//       const formData = new FormData();\n//       formData.append('title', formState.inputs.title.value);\n//       formData.append('description', formState.inputs.description.value);\n//       formData.append('address', formState.inputs.address.value);\n//       formData.append('image', formState.inputs.image.value);\n//       await sendRequest(process.env.REACT_APP_BACKEND_URL+'/places', 'POST', formData, {\n//         Authorization: 'Bearer ' + auth.token\n//       });\n//       history.push('/');\n//     } catch (err) {}\n//   };\n//   return (\n//     <React.Fragment>\n//       <ErrorModal error={error} onClear={clearError} />\n//       <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//         {isLoading && <LoadingSpinner asOverlay />}\n//         <Input\n//           id=\"title\"\n//           element=\"input\"\n//           type=\"text\"\n//           label=\"Title\"\n//           validators={[VALIDATOR_REQUIRE()]}\n//           errorText=\"Please enter a valid title.\"\n//           onInput={inputHandler}\n//         />\n//         <Input\n//           id=\"description\"\n//           element=\"textarea\"\n//           label=\"Description\"\n//           validators={[VALIDATOR_MINLENGTH(5)]}\n//           errorText=\"Please enter a valid description (at least 5 characters).\"\n//           onInput={inputHandler}\n//         />\n//         <Input\n//           id=\"address\"\n//           element=\"input\"\n//           label=\"Address\"\n//           validators={[VALIDATOR_REQUIRE()]}\n//           errorText=\"Please enter a valid address.\"\n//           onInput={inputHandler}\n//         />\n//         <ImageUpload\n//           id=\"image\"\n//           onInput={inputHandler}\n//           errorText=\"Please provide an image.\"\n//         />\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           ADD PLACE\n//         </Button>\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n// export default NewPlace;","map":{"version":3,"sources":["C:/Users/Filip/Diplomska Rabota/Frontend/src/places/pages/NewPlace.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n\n// import Input from '../../shared/components/FormElements/Input';\n// import Button from '../../shared/components/FormElements/Button';\n// import ErrorModal from '../../shared/components/UIElements/ErrorModal';\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n// import ImageUpload from '../../shared/components/FormElements/ImageUpload';\n// import {\n//   VALIDATOR_REQUIRE,\n//   VALIDATOR_MINLENGTH\n// } from '../../shared/util/validators';\n// import { useForm } from '../../shared/hooks/form-hook';\n// import { useHttpClient } from '../../shared/hooks/http-hook';\n// import { AuthContext } from '../../shared/context/auth-context';\n// import './PlaceForm.css';\n\n// const NewPlace = () => {\n//   const auth = useContext(AuthContext);\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n//   const [formState, inputHandler] = useForm(\n//     {\n//       title: {\n//         value: '',\n//         isValid: false\n//       },\n//       description: {\n//         value: '',\n//         isValid: false\n//       },\n//       address: {\n//         value: '',\n//         isValid: false\n//       },\n//       image: {\n//         value: null,\n//         isValid: false\n//       }\n//     },\n//     false\n//   );\n\n//   const history = useHistory();\n\n//   const placeSubmitHandler = async event => {\n//     event.preventDefault();\n//     try {\n//       const formData = new FormData();\n//       formData.append('title', formState.inputs.title.value);\n//       formData.append('description', formState.inputs.description.value);\n//       formData.append('address', formState.inputs.address.value);\n//       formData.append('image', formState.inputs.image.value);\n      \n//       await sendRequest(process.env.REACT_APP_BACKEND_URL+'/places', 'POST', formData, {\n//         Authorization: 'Bearer ' + auth.token\n//       });\n//       history.push('/');\n//     } catch (err) {}\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <ErrorModal error={error} onClear={clearError} />\n//       <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n//         {isLoading && <LoadingSpinner asOverlay />}\n//         <Input\n//           id=\"title\"\n//           element=\"input\"\n//           type=\"text\"\n//           label=\"Title\"\n//           validators={[VALIDATOR_REQUIRE()]}\n//           errorText=\"Please enter a valid title.\"\n//           onInput={inputHandler}\n//         />\n//         <Input\n//           id=\"description\"\n//           element=\"textarea\"\n//           label=\"Description\"\n//           validators={[VALIDATOR_MINLENGTH(5)]}\n//           errorText=\"Please enter a valid description (at least 5 characters).\"\n//           onInput={inputHandler}\n//         />\n//         <Input\n//           id=\"address\"\n//           element=\"input\"\n//           label=\"Address\"\n//           validators={[VALIDATOR_REQUIRE()]}\n//           errorText=\"Please enter a valid address.\"\n//           onInput={inputHandler}\n//         />\n//         <ImageUpload\n//           id=\"image\"\n//           onInput={inputHandler}\n//           errorText=\"Please provide an image.\"\n//         />\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           ADD PLACE\n//         </Button>\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n\n// export default NewPlace;\n"]},"metadata":{},"sourceType":"module"}