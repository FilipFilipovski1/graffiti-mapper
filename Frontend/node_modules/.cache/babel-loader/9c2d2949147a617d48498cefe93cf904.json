{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{useCallback,useReducer}from'react';var formReducer=function formReducer(state,action){switch(action.type){case'INPUT_CHANGE':var formIsValid=true;for(var inputId in state.inputs){if(inputId===action.inputId){formIsValid=formIsValid&&action.isValid;}else{formIsValid=formIsValid&&state.inputs[inputId].isValid;}}return _objectSpread(_objectSpread({},state),{},{inputs:_objectSpread(_objectSpread({},state.inputs),{},_defineProperty({},action.inputId,{value:action.value,isValid:action.isValid})),isValid:formIsValid});case'SET_DATA':return{inputs:action.inputs,isValid:action.formIsValid};default:return state;}};export var useForm=function useForm(initialInputs,initialFormValidity){var _useReducer=useReducer(formReducer,{inputs:initialInputs,isValid:initialFormValidity}),_useReducer2=_slicedToArray(_useReducer,2),formState=_useReducer2[0],dispatch=_useReducer2[1];var inputHandler=useCallback(function(id,value,isValid){dispatch({type:'INPUT_CHANGE',value:value,isValid:isValid,inputId:id});},[]);var setFormData=useCallback(function(inputData,formValidity){dispatch({type:'SET_DATA',inputs:inputData,formIsValid:formValidity});},[]);return[formState,inputHandler,setFormData];};","map":{"version":3,"sources":["C:/Users/Filip/react-frontend-02-prj-structure-routing/src/shared/hooks/form-hook.js"],"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","inputHandler","id","setFormData","inputData","formValidity"],"mappings":"giBAAA,OAASA,WAAT,CAAsBC,UAAtB,KAAwC,OAAxC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,cAAL,CACE,GAAIC,CAAAA,WAAW,CAAG,IAAlB,CACA,IAAK,GAAMC,CAAAA,OAAX,GAAsBJ,CAAAA,KAAK,CAACK,MAA5B,CAAoC,CAClC,GAAID,OAAO,GAAKH,MAAM,CAACG,OAAvB,CAAgC,CAC9BD,WAAW,CAAGA,WAAW,EAAIF,MAAM,CAACK,OAApC,CACD,CAFD,IAEO,CACLH,WAAW,CAAGA,WAAW,EAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD,CACD,CACF,CACD,sCACKN,KADL,MAEEK,MAAM,gCACDL,KAAK,CAACK,MADL,wBAEHJ,MAAM,CAACG,OAFJ,CAEc,CAAEG,KAAK,CAAEN,MAAM,CAACM,KAAhB,CAAuBD,OAAO,CAAEL,MAAM,CAACK,OAAvC,CAFd,EAFR,CAMEA,OAAO,CAAEH,WANX,GAQF,IAAK,UAAL,CACE,MAAO,CACLE,MAAM,CAAEJ,MAAM,CAACI,MADV,CAELC,OAAO,CAAEL,MAAM,CAACE,WAFX,CAAP,CAIF,QACE,MAAOH,CAAAA,KAAP,CAxBJ,CA0BD,CA3BD,CA6BA,MAAO,IAAMQ,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,aAAD,CAAgBC,mBAAhB,CAAwC,iBAC/BZ,UAAU,CAACC,WAAD,CAAc,CACpDM,MAAM,CAAEI,aAD4C,CAEpDH,OAAO,CAAEI,mBAF2C,CAAd,CADqB,4CACtDC,SADsD,iBAC3CC,QAD2C,iBAM7D,GAAMC,CAAAA,YAAY,CAAGhB,WAAW,CAAC,SAACiB,EAAD,CAAKP,KAAL,CAAYD,OAAZ,CAAwB,CACvDM,QAAQ,CAAC,CACPV,IAAI,CAAE,cADC,CAEPK,KAAK,CAAEA,KAFA,CAGPD,OAAO,CAAEA,OAHF,CAIPF,OAAO,CAAEU,EAJF,CAAD,CAAR,CAMD,CAP+B,CAO7B,EAP6B,CAAhC,CASA,GAAMC,CAAAA,WAAW,CAAGlB,WAAW,CAAC,SAACmB,SAAD,CAAYC,YAAZ,CAA6B,CAC3DL,QAAQ,CAAC,CACPV,IAAI,CAAE,UADC,CAEPG,MAAM,CAAEW,SAFD,CAGPb,WAAW,CAAEc,YAHN,CAAD,CAAR,CAKD,CAN8B,CAM5B,EAN4B,CAA/B,CAQA,MAAO,CAACN,SAAD,CAAYE,YAAZ,CAA0BE,WAA1B,CAAP,CACD,CAxBM","sourcesContent":["import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};"]},"metadata":{},"sourceType":"module"}