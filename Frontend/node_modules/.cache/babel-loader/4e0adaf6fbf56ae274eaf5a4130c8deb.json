{"ast":null,"code":"// import React, { useState, useContext } from 'react';\n// import Card from '../../shared/components/UIElements/Card';\n// import Button from '../../shared/components/FormElements/Button';\n// import Modal from '../../shared/components/UIElements/Modal';\n// import Map from '../../shared/components/UIElements/Map';\n// import ErrorModal from '../../shared/components/UIElements/ErrorModal';\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n// import { AuthContext } from '../../shared/context/auth-context';\n// import { useHttpClient } from '../../shared/hooks/http-hook';\n// import './PlaceItem.css';\n// function PlaceItem(props) {\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n//   const auth = useContext(AuthContext);\n//   const [showMap, setShowMap] = useState(false);\n//   const [showConfirmModal, setShowConfirmModal] = useState(false);\n//   const openMapHandler = () => setShowMap(true);\n//   const closeMapHandler = () => setShowMap(false);\n//   const showDeleteWarningHandler = () => {\n//     setShowConfirmModal(true);\n//   };\n//   const cancelDeleteHandler = () => {\n//     setShowConfirmModal(false);\n//   };\n//   const confirmDeleteHandler = async () => {\n//     setShowConfirmModal(false);\n//     try {\n//       await sendRequest(\n//         process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n//         'DELETE',\n//         null,\n//         {\n//           Authorization: 'Bearer ' + auth.token\n//         }\n//       );\n//       props.onDelete(props.id);\n//     } catch (err) { }\n//   };\n//   return (\n//     <React.Fragment>\n//       <ErrorModal error={error} onClear={clearError} />\n//       <Modal\n//         show={showMap}\n//         onCancel={closeMapHandler}\n//         header={props.address}\n//         contentClass=\"place-item__modal-content\"\n//         footerClass=\"place-item__modal-actions\"\n//         footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n//       >\n//         <div className=\"map-container\">\n//           <Map center={props.coordinates} zoom={16} />\n//         </div>\n//       </Modal>\n//       <Modal\n//         show={showConfirmModal}\n//         onCancel={cancelDeleteHandler}\n//         header=\"Are you sure?\"\n//         footerClass=\"place-item__modal-actions\"\n//         footer={<React.Fragment>\n//           <Button inverse onClick={cancelDeleteHandler}>\n//                    CANCEL\n//           </Button>\n//           <Button danger onClick={confirmDeleteHandler}>\n//             DELETE\n//           </Button>\n//         </React.Fragment>}\n//       >\n//         <p>\n//           Do you want to proceed and delete this place?Please note that it\n//           can't be undone thereafter.\n//         </p>\n//       </Modal>\n//       <li className=\"place-item\">\n//         <Card className=\"place-item__content\">\n//           {isLoading && <LoadingSpinner asOverlay />}\n//           <div className=\"place-item__image\">\n//             <img\n//               src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n//               alt={props.title} />\n//           </div>\n//           <div className=\"place-item__info\">\n//             <h2>{props.title}</h2>\n//             <h3>{props.address}</h3>\n//             <p>{props.description}</p>\n//           </div>\n//           <div className=\"place-item__actions\">\n//             <Button inverse onClick={openMapHandler}>\n//               VIEW ON MAP\n//             </Button>\n//             {auth.userId === props.creatorId && (\n//               <Button to={`/places/${props.id}`}>EDIT</Button>\n//             )}\n//             {auth.userId === props.creatorId && (\n//               <Button danger onClick={showDeleteWarningHandler}>\n//                 DELETE\n//               </Button>\n//             )}\n//           </div>\n//         </Card>\n//       </li>\n//     </React.Fragment>\n//   );\n// }\n// export default PlaceItem;","map":{"version":3,"sources":["C:/Users/Filip/Diplomska Rabota/Frontend/src/places/components/PlaceItem.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useContext } from 'react';\r\n\r\n// import Card from '../../shared/components/UIElements/Card';\r\n// import Button from '../../shared/components/FormElements/Button';\r\n// import Modal from '../../shared/components/UIElements/Modal';\r\n// import Map from '../../shared/components/UIElements/Map';\r\n// import ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n// import LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n// import { AuthContext } from '../../shared/context/auth-context';\r\n// import { useHttpClient } from '../../shared/hooks/http-hook';\r\n// import './PlaceItem.css';\r\n\r\n\r\n\r\n\r\n// function PlaceItem(props) {\r\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n//   const auth = useContext(AuthContext);\r\n//   const [showMap, setShowMap] = useState(false);\r\n//   const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n//   const openMapHandler = () => setShowMap(true);\r\n\r\n//   const closeMapHandler = () => setShowMap(false);\r\n\r\n//   const showDeleteWarningHandler = () => {\r\n//     setShowConfirmModal(true);\r\n//   };\r\n\r\n//   const cancelDeleteHandler = () => {\r\n//     setShowConfirmModal(false);\r\n//   };\r\n\r\n//   const confirmDeleteHandler = async () => {\r\n//     setShowConfirmModal(false);\r\n//     try {\r\n//       await sendRequest(\r\n//         process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n//         'DELETE',\r\n//         null,\r\n//         {\r\n//           Authorization: 'Bearer ' + auth.token\r\n//         }\r\n//       );\r\n//       props.onDelete(props.id);\r\n//     } catch (err) { }\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <ErrorModal error={error} onClear={clearError} />\r\n//       <Modal\r\n//         show={showMap}\r\n//         onCancel={closeMapHandler}\r\n//         header={props.address}\r\n//         contentClass=\"place-item__modal-content\"\r\n//         footerClass=\"place-item__modal-actions\"\r\n//         footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n//       >\r\n//         <div className=\"map-container\">\r\n//           <Map center={props.coordinates} zoom={16} />\r\n//         </div>\r\n//       </Modal>\r\n\r\n//       <Modal\r\n//         show={showConfirmModal}\r\n//         onCancel={cancelDeleteHandler}\r\n//         header=\"Are you sure?\"\r\n//         footerClass=\"place-item__modal-actions\"\r\n//         footer={<React.Fragment>\r\n//           <Button inverse onClick={cancelDeleteHandler}>\r\n//                    CANCEL\r\n//           </Button>\r\n//           <Button danger onClick={confirmDeleteHandler}>\r\n//             DELETE\r\n//           </Button>\r\n//         </React.Fragment>}\r\n//       >\r\n//         <p>\r\n//           Do you want to proceed and delete this place?Please note that it\r\n//           can't be undone thereafter.\r\n//         </p>\r\n//       </Modal>\r\n\r\n//       <li className=\"place-item\">\r\n//         <Card className=\"place-item__content\">\r\n//           {isLoading && <LoadingSpinner asOverlay />}\r\n//           <div className=\"place-item__image\">\r\n//             <img\r\n//               src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n//               alt={props.title} />\r\n//           </div>\r\n//           <div className=\"place-item__info\">\r\n//             <h2>{props.title}</h2>\r\n//             <h3>{props.address}</h3>\r\n//             <p>{props.description}</p>\r\n//           </div>\r\n//           <div className=\"place-item__actions\">\r\n//             <Button inverse onClick={openMapHandler}>\r\n//               VIEW ON MAP\r\n//             </Button>\r\n//             {auth.userId === props.creatorId && (\r\n//               <Button to={`/places/${props.id}`}>EDIT</Button>\r\n//             )}\r\n\r\n//             {auth.userId === props.creatorId && (\r\n//               <Button danger onClick={showDeleteWarningHandler}>\r\n//                 DELETE\r\n//               </Button>\r\n//             )}\r\n\r\n//           </div>\r\n//         </Card>\r\n//       </li>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// export default PlaceItem;\r\n"]},"metadata":{},"sourceType":"module"}