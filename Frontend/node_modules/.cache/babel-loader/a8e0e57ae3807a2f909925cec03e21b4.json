{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\Filip\\\\react-frontend-02-prj-structure-routing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";var VALIDATOR_TYPE_REQUIRE='REQUIRE';var VALIDATOR_TYPE_MINLENGTH='MINLENGTH';var VALIDATOR_TYPE_MAXLENGTH='MAXLENGTH';var VALIDATOR_TYPE_MIN='MIN';var VALIDATOR_TYPE_MAX='MAX';var VALIDATOR_TYPE_EMAIL='EMAIL';var VALIDATOR_TYPE_FILE='FILE';export var VALIDATOR_REQUIRE=function VALIDATOR_REQUIRE(){return{type:VALIDATOR_TYPE_REQUIRE};};export var VALIDATOR_FILE=function VALIDATOR_FILE(){return{type:VALIDATOR_TYPE_FILE};};export var VALIDATOR_MINLENGTH=function VALIDATOR_MINLENGTH(val){return{type:VALIDATOR_TYPE_MINLENGTH,val:val};};export var VALIDATOR_MAXLENGTH=function VALIDATOR_MAXLENGTH(val){return{type:VALIDATOR_TYPE_MAXLENGTH,val:val};};export var VALIDATOR_MIN=function VALIDATOR_MIN(val){return{type:VALIDATOR_TYPE_MIN,val:val};};export var VALIDATOR_MAX=function VALIDATOR_MAX(val){return{type:VALIDATOR_TYPE_MAX,val:val};};export var VALIDATOR_EMAIL=function VALIDATOR_EMAIL(){return{type:VALIDATOR_TYPE_EMAIL};};export var validate=function validate(value,validators){var isValid=true;var _iterator=_createForOfIteratorHelper(validators),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var validator=_step.value;if(validator.type===VALIDATOR_TYPE_REQUIRE){isValid=isValid&&value.trim().length>0;}if(validator.type===VALIDATOR_TYPE_MINLENGTH){isValid=isValid&&value.trim().length>=validator.val;}if(validator.type===VALIDATOR_TYPE_MAXLENGTH){isValid=isValid&&value.trim().length<=validator.val;}if(validator.type===VALIDATOR_TYPE_MIN){isValid=isValid&&+value>=validator.val;}if(validator.type===VALIDATOR_TYPE_MAX){isValid=isValid&&+value<=validator.val;}if(validator.type===VALIDATOR_TYPE_EMAIL){isValid=isValid&&/^\\S+@\\S+\\.\\S+$/.test(value);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return isValid;};","map":{"version":3,"sources":["C:/Users/Filip/react-frontend-02-prj-structure-routing/src/shared/util/validators.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_REQUIRE","type","VALIDATOR_FILE","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_MIN","VALIDATOR_MAX","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test"],"mappings":"6MAAA,GAAMA,CAAAA,sBAAsB,CAAG,SAA/B,CACA,GAAMC,CAAAA,wBAAwB,CAAG,WAAjC,CACA,GAAMC,CAAAA,wBAAwB,CAAG,WAAjC,CACA,GAAMC,CAAAA,kBAAkB,CAAG,KAA3B,CACA,GAAMC,CAAAA,kBAAkB,CAAG,KAA3B,CACA,GAAMC,CAAAA,oBAAoB,CAAG,OAA7B,CACA,GAAMC,CAAAA,mBAAmB,CAAG,MAA5B,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAO,CAAEC,IAAI,CAAER,sBAAR,CAAP,EAA1B,CACP,MAAO,IAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAO,CAAED,IAAI,CAAEF,mBAAR,CAAP,EAAvB,CACP,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,GAAG,QAAK,CACzCH,IAAI,CAAEP,wBADmC,CAEzCU,GAAG,CAAEA,GAFoC,CAAL,EAA/B,CAIP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAD,GAAG,QAAK,CACzCH,IAAI,CAAEN,wBADmC,CAEzCS,GAAG,CAAEA,GAFoC,CAAL,EAA/B,CAIP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAF,GAAG,QAAK,CAAEH,IAAI,CAAEL,kBAAR,CAA4BQ,GAAG,CAAEA,GAAjC,CAAL,EAAzB,CACP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAH,GAAG,QAAK,CAAEH,IAAI,CAAEJ,kBAAR,CAA4BO,GAAG,CAAEA,GAAjC,CAAL,EAAzB,CACP,MAAO,IAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAO,CAAEP,IAAI,CAAEH,oBAAR,CAAP,EAAxB,CAEP,MAAO,IAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,UAAR,CAAuB,CAC7C,GAAIC,CAAAA,OAAO,CAAG,IAAd,CAD6C,yCAErBD,UAFqB,YAE7C,+CAAoC,IAAzBE,CAAAA,SAAyB,aAClC,GAAIA,SAAS,CAACZ,IAAV,GAAmBR,sBAAvB,CAA+C,CAC7CmB,OAAO,CAAGA,OAAO,EAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,CAAsB,CAA3C,CACD,CACD,GAAIF,SAAS,CAACZ,IAAV,GAAmBP,wBAAvB,CAAiD,CAC/CkB,OAAO,CAAGA,OAAO,EAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,EAAuBF,SAAS,CAACT,GAAtD,CACD,CACD,GAAIS,SAAS,CAACZ,IAAV,GAAmBN,wBAAvB,CAAiD,CAC/CiB,OAAO,CAAGA,OAAO,EAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,EAAuBF,SAAS,CAACT,GAAtD,CACD,CACD,GAAIS,SAAS,CAACZ,IAAV,GAAmBL,kBAAvB,CAA2C,CACzCgB,OAAO,CAAGA,OAAO,EAAI,CAACF,KAAD,EAAUG,SAAS,CAACT,GAAzC,CACD,CACD,GAAIS,SAAS,CAACZ,IAAV,GAAmBJ,kBAAvB,CAA2C,CACzCe,OAAO,CAAGA,OAAO,EAAI,CAACF,KAAD,EAAUG,SAAS,CAACT,GAAzC,CACD,CACD,GAAIS,SAAS,CAACZ,IAAV,GAAmBH,oBAAvB,CAA6C,CAC3Cc,OAAO,CAAGA,OAAO,EAAI,iBAAiBI,IAAjB,CAAsBN,KAAtB,CAArB,CACD,CACF,CArB4C,qDAsB7C,MAAOE,CAAAA,OAAP,CACD,CAvBM","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}